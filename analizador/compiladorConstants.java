/* Generated By:JavaCC: Do not edit this line. compiladorConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PRINT = 1;
  /** RegularExpression Id. */
  int TIPO_METODO = 2;
  /** RegularExpression Id. */
  int MAIN = 3;
  /** RegularExpression Id. */
  int VOID = 4;
  /** RegularExpression Id. */
  int EXCEPCIONES = 5;
  /** RegularExpression Id. */
  int TRY = 6;
  /** RegularExpression Id. */
  int MANDA_EXCEPCION = 7;
  /** RegularExpression Id. */
  int DEFINE_CLASES = 8;
  /** RegularExpression Id. */
  int TIPO_DATO = 9;
  /** RegularExpression Id. */
  int PARIZQ = 10;
  /** RegularExpression Id. */
  int CORIZQ = 11;
  /** RegularExpression Id. */
  int LLAVEIZQ = 12;
  /** RegularExpression Id. */
  int PARDER = 13;
  /** RegularExpression Id. */
  int CORDER = 14;
  /** RegularExpression Id. */
  int LLAVEDER = 15;
  /** RegularExpression Id. */
  int COMA = 16;
  /** RegularExpression Id. */
  int PUNTO = 17;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 18;
  /** RegularExpression Id. */
  int COMILLADOBLE = 19;
  /** RegularExpression Id. */
  int DOSPUNTOS = 20;
  /** RegularExpression Id. */
  int FUNCION = 21;
  /** RegularExpression Id. */
  int MODIFICADOR_ACCESO = 22;
  /** RegularExpression Id. */
  int ASIGNACION = 23;
  /** RegularExpression Id. */
  int MAS = 24;
  /** RegularExpression Id. */
  int MENOS = 25;
  /** RegularExpression Id. */
  int MULT = 26;
  /** RegularExpression Id. */
  int DIV = 27;
  /** RegularExpression Id. */
  int OP_REL = 28;
  /** RegularExpression Id. */
  int OP_LOG = 29;
  /** RegularExpression Id. */
  int EXTENDS = 30;
  /** RegularExpression Id. */
  int ENDIF = 31;
  /** RegularExpression Id. */
  int ENDCICLO = 32;
  /** RegularExpression Id. */
  int CICLOWHILE = 33;
  /** RegularExpression Id. */
  int FOR = 34;
  /** RegularExpression Id. */
  int FOREACH = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int REPETIR = 37;
  /** RegularExpression Id. */
  int OBJECTOS = 38;
  /** RegularExpression Id. */
  int EVENT = 39;
  /** RegularExpression Id. */
  int BEGIN = 40;
  /** RegularExpression Id. */
  int AS = 41;
  /** RegularExpression Id. */
  int INTERRUPTOR = 42;
  /** RegularExpression Id. */
  int SWITCH = 43;
  /** RegularExpression Id. */
  int IF = 44;
  /** RegularExpression Id. */
  int ELSE = 45;
  /** RegularExpression Id. */
  int ELIF = 46;
  /** RegularExpression Id. */
  int CHECKED = 47;
  /** RegularExpression Id. */
  int CONST = 48;
  /** RegularExpression Id. */
  int PORDEFECTO = 49;
  /** RegularExpression Id. */
  int RETORNA_VALOR = 50;
  /** RegularExpression Id. */
  int ASYNC = 51;
  /** RegularExpression Id. */
  int ASSERT = 52;
  /** RegularExpression Id. */
  int DEL = 53;
  /** RegularExpression Id. */
  int EXEC = 54;
  /** RegularExpression Id. */
  int CALIFICADOR = 55;
  /** RegularExpression Id. */
  int LIBRERIAS = 56;
  /** RegularExpression Id. */
  int IN = 57;
  /** RegularExpression Id. */
  int IS = 58;
  /** RegularExpression Id. */
  int NONE = 59;
  /** RegularExpression Id. */
  int PASS = 60;
  /** RegularExpression Id. */
  int INC_DEC = 61;
  /** RegularExpression Id. */
  int BOOLEAN = 62;
  /** RegularExpression Id. */
  int INSTANCEOF = 63;
  /** RegularExpression Id. */
  int ISSET = 64;
  /** RegularExpression Id. */
  int CLONE = 65;
  /** RegularExpression Id. */
  int GOTO = 66;
  /** RegularExpression Id. */
  int TRAIT = 67;
  /** RegularExpression Id. */
  int EVALUA = 68;
  /** RegularExpression Id. */
  int TERMINA = 69;
  /** RegularExpression Id. */
  int EMPY = 70;
  /** RegularExpression Id. */
  int ECHO = 71;
  /** RegularExpression Id. */
  int UNSET = 72;
  /** RegularExpression Id. */
  int MODULE = 73;
  /** RegularExpression Id. */
  int NIL = 74;
  /** RegularExpression Id. */
  int EJECUTA_FALSE = 75;
  /** RegularExpression Id. */
  int CALLABLE = 76;
  /** RegularExpression Id. */
  int TRANSIENT = 77;
  /** RegularExpression Id. */
  int NULL = 78;
  /** RegularExpression Id. */
  int OPEN = 79;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 80;
  /** RegularExpression Id. */
  int TYPEDEF = 81;
  /** RegularExpression Id. */
  int PACKAGE = 82;
  /** RegularExpression Id. */
  int STRICTFP = 83;
  /** RegularExpression Id. */
  int VOLATILE = 84;
  /** RegularExpression Id. */
  int DEFER = 85;
  /** RegularExpression Id. */
  int MAP = 86;
  /** RegularExpression Id. */
  int REDO = 87;
  /** RegularExpression Id. */
  int ALIAS = 88;
  /** RegularExpression Id. */
  int CLAUSULA = 89;
  /** RegularExpression Id. */
  int MAYUSCULA = 90;
  /** RegularExpression Id. */
  int MINUSCULA = 91;
  /** RegularExpression Id. */
  int OPERADOR = 92;
  /** RegularExpression Id. */
  int TYPEOF = 93;
  /** RegularExpression Id. */
  int SIZEOF = 94;
  /** RegularExpression Id. */
  int EXP_IMP = 95;
  /** RegularExpression Id. */
  int CONTENEDOR_ELEMENTO = 96;
  /** RegularExpression Id. */
  int STACKALLOC = 97;
  /** RegularExpression Id. */
  int SET = 98;
  /** RegularExpression Id. */
  int GET = 99;
  /** RegularExpression Id. */
  int VALUE = 100;
  /** RegularExpression Id. */
  int RANGE = 101;
  /** RegularExpression Id. */
  int UNDEF = 102;
  /** RegularExpression Id. */
  int MOD = 103;
  /** RegularExpression Id. */
  int PARAMS = 104;
  /** RegularExpression Id. */
  int ONE_WAY = 105;
  /** RegularExpression Id. */
  int NAMESPACE = 106;
  /** RegularExpression Id. */
  int REF = 107;
  /** RegularExpression Id. */
  int MAXINT = 108;
  /** RegularExpression Id. */
  int USES = 109;
  /** RegularExpression Id. */
  int THREAD_safe = 110;
  /** RegularExpression Id. */
  int ENUM = 111;
  /** RegularExpression Id. */
  int ODD = 112;
  /** RegularExpression Id. */
  int FIXED = 113;
  /** RegularExpression Id. */
  int STRUCT = 114;
  /** RegularExpression Id. */
  int USING = 115;
  /** RegularExpression Id. */
  int OVERRIDE = 116;
  /** RegularExpression Id. */
  int READONLY = 117;
  /** RegularExpression Id. */
  int LOCK_UNLOCK = 118;
  /** RegularExpression Id. */
  int ASM = 119;
  /** RegularExpression Id. */
  int NEWTYPE = 120;
  /** RegularExpression Id. */
  int BITLAND = 121;
  /** RegularExpression Id. */
  int OUTER = 122;
  /** RegularExpression Id. */
  int FUTURE = 123;
  /** RegularExpression Id. */
  int REST = 124;
  /** RegularExpression Id. */
  int DEBUGGER = 125;
  /** RegularExpression Id. */
  int TRANSITIVE = 126;
  /** RegularExpression Id. */
  int ACCEDE_CLASE_PADRE = 127;
  /** RegularExpression Id. */
  int CASE = 128;
  /** RegularExpression Id. */
  int FIN = 129;
  /** RegularExpression Id. */
  int PROGRAMA = 130;
  /** RegularExpression Id. */
  int SISTEMA = 131;
  /** RegularExpression Id. */
  int LIMPIAR = 132;
  /** RegularExpression Id. */
  int FUNCMATEMATICA = 133;
  /** RegularExpression Id. */
  int MATEMATICA = 134;
  /** RegularExpression Id. */
  int ENTRADA = 135;
  /** RegularExpression Id. */
  int USO_LIBRERIA = 136;
  /** RegularExpression Id. */
  int READ = 137;
  /** RegularExpression Id. */
  int CONVERTIR = 138;
  /** RegularExpression Id. */
  int IDENTIFIER = 139;
  /** RegularExpression Id. */
  int NUMEROS = 140;
  /** RegularExpression Id. */
  int NUMEROS_DECIMALES = 141;
  /** RegularExpression Id. */
  int LETRA = 142;
  /** RegularExpression Id. */
  int CADENA = 143;
  /** RegularExpression Id. */
  int CARAC = 144;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"print\"",
    "<TIPO_METODO>",
    "\"public static void main()\"",
    "\"void\"",
    "<EXCEPCIONES>",
    "\"try\"",
    "\"catch\"",
    "\"class\"",
    "<TIPO_DATO>",
    "\"(\"",
    "\"[\"",
    "\"{\"",
    "\")\"",
    "\"]\"",
    "\"}\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"\\\"\"",
    "\":\"",
    "<FUNCION>",
    "<MODIFICADOR_ACCESO>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<OP_REL>",
    "<OP_LOG>",
    "<EXTENDS>",
    "\"endif\"",
    "<ENDCICLO>",
    "\"while\"",
    "\"for\"",
    "\"foreach\"",
    "\"do\"",
    "<REPETIR>",
    "<OBJECTOS>",
    "\"event\"",
    "\"begin\"",
    "\"as\"",
    "<INTERRUPTOR>",
    "\"switch\"",
    "\"if\"",
    "\"else\"",
    "\"elif\"",
    "<CHECKED>",
    "\"const\"",
    "\"default\"",
    "<RETORNA_VALOR>",
    "\"async\"",
    "\"assert\"",
    "\"del\"",
    "\"exec\"",
    "<CALIFICADOR>",
    "<LIBRERIAS>",
    "\"in\"",
    "\"is\"",
    "\"none\"",
    "\"pass\"",
    "<INC_DEC>",
    "<BOOLEAN>",
    "\"instanceof\"",
    "\"isset\"",
    "\"clone\"",
    "\"goto\"",
    "\"trait\"",
    "<EVALUA>",
    "<TERMINA>",
    "\"empy\"",
    "\"echo\"",
    "\"unset\"",
    "\"module\"",
    "\"nil\"",
    "<EJECUTA_FALSE>",
    "\"callable\"",
    "\"transient\"",
    "\"null\"",
    "<OPEN>",
    "\"synchronized\"",
    "\"typedef\"",
    "\"package\"",
    "\"strictfp\"",
    "\"volatile\"",
    "\"defer\"",
    "\"map\"",
    "\"redo\"",
    "\"alias\"",
    "<CLAUSULA>",
    "\"upper\"",
    "\"lower\"",
    "\"new\"",
    "\"typeof\"",
    "\"sizeof\"",
    "<EXP_IMP>",
    "<CONTENEDOR_ELEMENTO>",
    "\"stackalloc\"",
    "\"set\"",
    "\"get\"",
    "<VALUE>",
    "\"range\"",
    "\"undef\"",
    "<MOD>",
    "\"params\"",
    "\"one_way\"",
    "\"namespace\"",
    "\"ref\"",
    "\"maxint\"",
    "\"uses\"",
    "\"thread safe\"",
    "\"enum\"",
    "\"odd\"",
    "\"fixed\"",
    "\"struct\"",
    "\"using\"",
    "\"override\"",
    "\"readonly\"",
    "<LOCK_UNLOCK>",
    "\"asm\"",
    "\"newtype\"",
    "\"bitland\"",
    "\"outer\"",
    "\"future\"",
    "\"rest\"",
    "\"debugger\"",
    "\"transitive\"",
    "\"super\"",
    "\"case\"",
    "\"end\"",
    "\"program\"",
    "\"system\"",
    "\"clear\"",
    "<FUNCMATEMATICA>",
    "\"math\"",
    "\"input\"",
    "<USO_LIBRERIA>",
    "\"read\"",
    "\"convert\"",
    "<IDENTIFIER>",
    "<NUMEROS>",
    "<NUMEROS_DECIMALES>",
    "<LETRA>",
    "<CADENA>",
    "<CARAC>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"//\"",
    "\"/*\"",
    "\"*/\"",
  };

}
